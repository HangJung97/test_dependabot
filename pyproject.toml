[tool.poetry]
name = "test_dependabot"
version = "0.0.1"
description = "test_dependabot"
authors = ["Hang Jung Ling <hang-jung.ling@insa-lyon.fr>"]
readme = "README.md"
repository = "https://github.com/HangJung97/test_dependabot"
classifiers = [
    "Environment :: Console",
    "Natural Language :: English",
    # Pick your license as you wish
    "Operating System :: OS Independent",
    # Specify the Python versions you support here. In particular, ensure
    # that you indicate whether you support Python 2, Python 3 or both.
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
]

[tool.poetry.dependencies]
python = "~3.10"
torch = ">=2.1.0"
torchvision = ">=0.16.0"
lightning = ">=2.0.0"
torchmetrics = ">=0.11.4"
hydra-core = "==1.3.2"
hydra-submitit-launcher = "*"
hydra-colorlog = "==1.2.0"
hydra-optuna-sweeper = "==1.2.0"
wandb = "*"
tensorboardX = "*"
pyrootutils = "*"
rich = "*"
sh = { version = "*", markers = "sys_platform == 'win32'" }
torchinfo = "*"
SimpleITK = "*"
scikit-image = "*"
scikit-learn = "*"
nibabel = "*"
monai = "==1.2.0"
einops = "*"
"ruamel.yaml" = "*"
joblib = "*"
numpy = "*"
pandas = "*"
h5py = "*"
medpy = "*"
matplotlib = "*"
holoviews = "*"
seaborn = "*"
mat73 = "*"
ascent = { path = "/ASCENT/", develop = true }

[tool.poetry.group.dev.dependencies]
pre-commit = "^2.20.0"
isort = "==5.12.0"
black = "==23.3.0"
flake8 = "==6.0.0"
flake8-docstrings = "==1.7.0"
pyupgrade = "==v3.3.1"
docformatter = "==v1.4"
bandit = "==1.7.5"
shellcheck-py = "==v0.9.0.5"
mdformat = "==0.7.16"
codespell = "==v2.2.5"
nbstripout = "==0.6.1"
nbQA = "==1.7.0"

[tool.poetry.scripts]
explicit_train = "explicit.train:main"
explicit_evaluate = "explicit.eval:main"
explicit_predict = "explicit.predict:main"

[tool.pytest.ini_options]
addopts = [
    "--color=yes",
    "--durations=0",
    "--strict-markers",
    "--doctest-modules",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::UserWarning",
]
log_cli = "True"
markers = [
    "slow: slow tests",
]
minversion = "6.0"
testpaths = "tests/"

[tool.coverage.report]
exclude_lines = [
    "pragma: nocover",
    "raise NotImplementedError",
    "raise NotImplementedError()",
    "if __name__ == .__main__.:",
]

[tool.black]
line-length = 99
exclude = "(.eggs|.git|.hg|.mypy_cache|.nox|.tox|.venv|.svn|_build|buck-out|build|dist)"

[tool.isort]
profile = "black"
line_length = 99
src_paths = ["cipher"]

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B301"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
